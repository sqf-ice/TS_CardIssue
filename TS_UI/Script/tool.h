//#####################################
//
//	工具函数
//
//	所应用到的一些代码片段，与脚本、COS无关
//
//	最后修改日期：2015-11-25 17:26
//#####################################

#ifndef TOOL_H
#define TOOL_H
#include <string>
using namespace std;


	/**************************************
	功能：检查一个字符是否为十六进制字符
	返回：
	true：检查通过
	false：不通过
	描述：
	所谓十六进制字符，是指在区间 ['0','9']||['a','f']||['A','F'] 范围内的字符，如'0'、'8'、'b'、'D'等
	**************************************/
bool IsHex( char HexCh );//检查一个字符是否十六进制字符

	/**************************************
	功能：检查字符串是否十六进制字符组成
	返回：
	true：检查通过
	false：含非法字符或长度为0
	描述：
	所谓十六进制字符，是指在区间 ['0','9']||['a','f']||['A','F'] 范围内的字符，如'0'、'8'、'b'、'D'等
	**************************************/
bool IsHex( string HexStr );//检查字符串是否十六进制串

	/**************************************
	功能：根据脚本规约中的变量名称来获取变量序号
	参数：
	IN：VarName：脚本规约中的变量名，如"[VAR0]"、"[VAR5]"等
	返回：
	>=0：获取到的变量序号
	<0：出错
	**************************************/
bool Get_VarNo( string VarName );//获取变量序号

	/************************************************************************/
	/*名    称:	HexToDec
	/*功    能:	将十六进制数转换成十进制数
	/*输入参数:	strSource: 需要转换的十六进制数
	/*输出参数:	null
	/*返 回 值:	转换后的十进制数(若strSource不是十六进制字符串返回0)
	/************************************************************************/
long HexToDec(string strSource);

	/************************************************************************/
	/*名    称:	DecToHex()
	/*功    能:	将十进制数转换成十六进制数
	/*输入参数:	lSource: 需要转换的十进制数
	/*输出参数:	null
	/*返 回 值:	转换后的十六进制数(偶数位数且为大写字母)
	/************************************************************************/
string DecToHex(long lSource);

	/************************************************************************/
	/*名    称:	JudgeHex
	/*功    能:	判断字符串是否是十六进制字符串(不区分大小写)
	/*输入参数:	strSource: 源字符串
	/*输出参数:	null
	/*返 回 值:	true	为空或十六进制数	false	非十六进制数
	/************************************************************************/
bool JudgeHex(string strSource);

	/************************************************************************/
	/*名    称:	JudgeDec
	/*功    能:	判断字符串是否是十进制字符串
	/*输入参数:	strSource: 源字符串
	/*输出参数:	null
	/*返 回 值:	true	为空或十进制数	false	非十进制数
	/************************************************************************/
bool JudgeDec(string strSource);

	/************************************************************************/
	/*名    称:	StrDelBlank
	/*功    能:	删除字符串前后的空格
	/*输入参数:	strDatas：需要处理的字符串
	/*输出参数:	null
	/*返 回 值:	去除空格之后的字符串
	/************************************************************************/
string StrDelBlank( string strDatas );

	/************************************************************************/
	/*名    称:	StrTrim
	/*功    能:	删除字符串中的所有指定子串，默认是所有空格
	/*输入参数:	str：需要处理的字符串，delStr：需删除的字符串
	/*输出参数:	null
	/*返 回 值:	去除空格之后的字符串
	/************************************************************************/
string StrTrim(string str, string delStr= " ");

	/**************************************
	功能：清除字串中的常量与变量字符
	参数：
	IN：InStr：输入待处理的字串
	OUT：OutStr：输出处理后的字串（在此过程中会顺带清除空格）
	返回：
	true：原字串确实存在常量或变量字符
	false：原字串不存在常量或变量字符
	描述：
	所谓变量字符是指符合脚本规范中常量、变量书写规范的字符，形如“[VAR0]”、“[CON 2]”“ [  V A  R1  1 ]”等（无视空格）
	如输入："45[VA R0]j[hj[ [CON 2]sd5[ VARdf]]]51[CON2[VAR123[VAR56]",将输出"46j[hj[sd5[VARdf]]]51[CON2[VAR123"
	**************************************/
bool StrDel_ConVar(const string &InStr, string &OutStr);

	/**************************************
	功能：获取变量名称
	参数：
	IN：VarNo：变量序号，取值范围0-99
	返回：
	输出按脚本规约的变量名，如"[VAR0]"、"[VAR5]"等，如发生错误则输出空串
	**************************************/
string VAR_Name(int VarNo);//输出变量名称

	/**************************************
	功能：获取变量序号
	参数：
	IN：VarName：脚本规约中的变量名，如"[VAR0]"、"[VAR5]"等
	返回：
	>=0：获取到的变量序号
	<0：出错
	**************************************/
int VAR_No(string VarName);//获取变量序号

	/**************************************
	功能：将字符串中的小写字符转换成大写
	参数：
	IN：Str：待处理的字符串
	返回：
	输出转换后的字符串
	**************************************/
string ToUpper(string Str);

	/************************************************************************/
	/*名    称:	CON_Name
	/*功    能:	获取常量,如输入CON5，则输出[CON5]
	/*输入参数:	strCON: 常量名称
	/*输出参数:	常量
	/*返 回 值:	null
	/************************************************************************/
string CON_Name(string strCON);

/************************************************************************/
/*名    称:	HexToGbkOrAsc(CString strSource)
/*功    能:	汉字（GBK）及字符(ASC)转成十六进制字符串
/*输入参数:	strSource: 源字符串
/*输出参数:	null
/*返 回 值:	转换后的字符串
/************************************************************************/
string GbkOrAscToHex(string strSource);

/************************************************************************/
/*名    称:	SaveFile
/*功    能:	保存文件，文件存在的话覆盖替换
/*输入参数:	strFilePath: 文件的绝对路径		strData：写入文件的数据
/*输出参数:	null
/*返 回 值:	true	成功	false	失败
/************************************************************************/
bool SaveFile( string strFilePath, string strData );
	/************************************************************************/
	/*名    称:	WriteLog(string strData)
	/*功    能:	写日志
	/*输入参数:	strData:写入日志数据	nMode：模式 1 记录时间 2不记录时间
	/*输出参数:	无  
	/*返 回 值:	0	成功	1	失败
	/************************************************************************/
	int WriteLog( string strData, int nMode );
	/************************************************************************/
	/*名    称:	RemoveLOG
	/*功    能:	删除file路径下nDays之前的文件
	/*输入参数:	pszFile: 路径(格式如c:\\TS_Logs\\)	nDays:天数
	/*输出参数:	null
	/*返 回 值:	null
	/************************************************************************/
	void RemoveLOG(char *pszFile, int nDays);	
	/************************************************************************/
	/*名    称:	HexToBinary()
	/*功    能:	十六进制字符串转化为二进制字符串
	/*输入参数:	strSource: 十六进制串
	/*输出参数:	null
	/*返 回 值:	二进制串
	/************************************************************************/
	string HexToBinary( string strSource );
	/************************************************************************/
	/*名    称:	BinaryToHex()
	/*功    能:	二进制字符串转化为十六进制字符串
	/*输入参数:	strSource: 二进制串
	/*输出参数:	null
	/*返 回 值:	十六进制串
	/************************************************************************/
	string BinaryToHex( string strSource );
#endif //TOOL_H